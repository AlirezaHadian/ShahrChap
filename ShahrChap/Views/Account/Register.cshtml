@model ViewModels.RegisterViewModel
@using System.Configuration
@{
    <h2>@ViewBag.Title</h2>
}


@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal internal-style">
        <div class="register-page">
            <ol class="breadcrumb my-5">
                <li class="breadcrumb-item"><a href="#">خانه</a></li>
                <li class="breadcrumb-item"><a href="#">محصولات</a></li>
                <li class="breadcrumb-item active" aria-current="page">چاپ و تکثیر شهر چاپ</li>
            </ol>
            <div class="register-form">
                <div class="register-title text-center pb-2">
                    <h2 class="">ثبت نام</h2>
                    <p>با ثبت نام در سایت ، از مزایای کاربران سایت بهره مند شوید</p>
                    <img src="/Content/img/Sign up.png" class="img-fluid" alt="">
                </div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <div class="input-element">
                        <i class="fas fa-user"></i>
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @placeholder = "نام کاربری", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="input-element">
                        <i class="fas fa-phone"></i>
                        @Html.EditorFor(model => model.EmailOrPhone, new { htmlAttributes = new { @placeholder = "ایمیل / شماره موبایل", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmailOrPhone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="input-element">
                        <i class="fas fa-unlock-alt"></i>
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @placeholder = "کلمه عبور", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="input-element">
                        <i class="fas fa-unlock-alt"></i>
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @placeholder = "تکرار کلمه عبور", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>


                @*Html.HiddenFor(model => model.GoogleCaptchaToken)*@

                <div class="form-group">
                    <div class="pt-2">
                        <input type="submit" class="register-btn" value="ثبت نام" data-bs-toggle="modal" data-bs-target="#exampleModal">
                    </div>
                    <div class="login-btn">
                        <hr>
                        <a href="/Login">
                            <i class="fas fa-user"></i>
                            ورود به سایت
                        </a>
                        <a href="/">
                            <i class="fas fa-angle-left"></i>
                            برگشت به سایت
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@*<script src="https://www.google.com/recaptcha/api.js?render=6LedXs0eAAAAAN6rVW0uf6UXN6cn6E-Z4sIYq6YQ"></script>
    <script>
        function onClick(e) {
            e.preventDefault();
            grecaptcha.ready(function () {
                grecaptcha.execute("6LedXs0eAAAAAN6rVW0uf6UXN6cn6E-Z4sIYq6YQ", { action: 'submit' }).then(function (token) {
                    $("#GoogleCaptchaToken").val(token)
                });
            });
        }
    </script>*@